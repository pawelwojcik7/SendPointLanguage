package send.point.sandbox;

/*Generated by MPS */

import javax.swing.JPanel;
import javax.swing.event.DocumentListener;
import javax.swing.event.DocumentEvent;
import javax.swing.JTextField;
import javax.swing.JTextArea;
import javax.swing.JButton;
import javax.swing.JComboBox;
import java.io.IOException;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.URI;
import java.net.http.HttpResponse;
import java.awt.GridLayout;
import javax.swing.JLabel;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.BorderFactory;
import java.awt.Color;

public class SendPoint1 extends JPanel {

  private DocumentListener listener = new DocumentListener() {
    @Override
    public void insertUpdate(DocumentEvent p1) {
    }

    @Override
    public void removeUpdate(DocumentEvent p1) {
    }

    @Override
    public void changedUpdate(DocumentEvent p1) {
    }
  };
  private String[] methods = {"GET", "POST", "PUT", "DELETE"};
  private JTextField addressField_b = new JTextField();
  private JTextField parameterField_a1 = new JTextField();
  private JTextField parameterField_b1 = new JTextField();
  private JTextField parameterField_c1 = new JTextField();
  private JTextField pathVariableField_a1 = new JTextField();
  private JTextField pathVariableField_b1 = new JTextField();
  private JTextArea SendPoint1bodyField_b = new JTextArea();
  private JButton sendButton_b = new JButton("Send");
  private JComboBox method_b = new JComboBox<String>(methods);
  private JTextField responseStatus_b = new JTextField();
  private JTextArea responseBody_b = new JTextArea();

  private void send() throws IOException, InterruptedException {
    HttpClient client = HttpClient.newHttpClient();
    HttpRequest request = HttpRequest.newBuilder().GET().header("accept", "application/json").uri(URI.create("http://localhost:8080/testget")).build();
    HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());
    System.out.println(response.body());
    System.out.println(response.statusCode());
  }

  public SendPoint1() {

    super(new GridLayout(0, 2));

    addressField_b.getDocument().addDocumentListener(listener);
    add(new JLabel("Address"));
    add(addressField_b);


    parameterField_a1.getDocument().addDocumentListener(listener);
    add(new JLabel("parameter1"));
    add(parameterField_a1);
    parameterField_b1.getDocument().addDocumentListener(listener);
    add(new JLabel("parameter2"));
    add(parameterField_b1);
    parameterField_c1.getDocument().addDocumentListener(listener);
    add(new JLabel("parameter3"));
    add(parameterField_c1);

    pathVariableField_a1.getDocument().addDocumentListener(listener);
    add(new JLabel("pathVariable1"));
    add(pathVariableField_a1);
    pathVariableField_b1.getDocument().addDocumentListener(listener);
    add(new JLabel("pathVariable2"));
    add(pathVariableField_b1);

    add(SendPoint1bodyField_b);

    sendButton_b.addActionListener(new ActionListener() {
      @Override
      public void actionPerformed(ActionEvent p1) {
        try {
          send();
        } catch (IOException | InterruptedException e) {
          System.out.println("blad");
        }
      }
    });
    add(sendButton_b);

    add(method_b);

    add(responseStatus_b);

    add(responseBody_b);


    super.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.BLACK), "  " + "SendPoint" + "   "));
  }
}
